#include "linux_native_dialog.hpp"

#include <cstdio>
#include <sys/poll.h>

#include "forge/core/logging.hpp"
#include "forge/fmt/fmt.hpp"
#include "forge/util/defer.hpp"

#include "forge/system/native_dialog.hpp"

std::vector<std::string> forge::linux_native_file_dialog(FileDialogOptions options)
{
	std::string_view gde = getenv("XDG_CURRENT_DESKTOP");

	std::string cmd_name;

	char path_seperator;

	// 2>/dev/null is appended to the to suppress annoying errors generated by either zenity or kdialog

	if (gde == "KDE")
	{
		path_seperator = '\n';

		auto multiple_str = options.allow_multiple ? "--multiple --separate-output" : "";

		cmd_name = fmt::format(R"(kdialog --getopenfilename {} {} "{}" 2>/dev/null)",
			multiple_str, options.root, options.allowed_mimes);
	}
	else
	{
		path_seperator = '|';

		auto multiple_str = options.allow_multiple ? "--multiple" : "";

		cmd_name = fmt::format(R"(zenity --file-selection {} --filename="{}" --file-filter="{} 2>/dev/null")",
			multiple_str, options.root, options.allowed_mimes);
	}

	auto *f = popen(cmd_name.c_str(), "r");

	if (f == nullptr)
	{
		return {};
	}

	DEFER([&f]
	{
		pclose(f);
	});

	std::string buffer;

	std::vector<std::string> output;

	auto c = fgetc(f);

	while (c != -1)
	{
		if (c == path_seperator)
		{
			output.emplace_back(buffer);
			buffer.clear();
		}
		else
		{
			buffer += c;
		}

		c = fgetc(f);
	}

	if (!buffer.empty())
	{
		output.emplace_back(buffer);
	}

	return output;
}
